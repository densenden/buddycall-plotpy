{
    "slides": [
        {
            "title": "\ud83d\ude80 BuddyCall: Trump & Musk - Datenvisualisierung mit Plotly",
            "text": "Interaktive Session zur Datenanalyse mit Plotly. Wir nutzen Pandas f\u00fcr Datenverarbeitung und Plotly f\u00fcr Visualisierungen.",
            "image": "assets/team_intro.png",
            "next": 1
        },
        {
            "title": "\ud83d\udcca Warum Datenvisualisierung?",
            "text": "Infografiken helfen, komplexe Daten einfach und verst\u00e4ndlich zu machen. Gute Infografiken folgen bestimmten Prinzipien.",
            "link": "https://venngage.com/blog/7-essential-rules-create-infographics/",
            "highlight": "7 Regeln f\u00fcr gute Infografiken",
            "code": [
                "1. Klare Botschaft definieren",
                "2. Relevante Daten ausw\u00e4hlen",
                "3. Daten visuell sinnvoll darstellen",
                "4. Farben und Typografie gezielt einsetzen",
                "5. Einfach und verst\u00e4ndlich bleiben"
            ],
            "image": "assets/info_visualization.png",
            "prev": 0,
            "next": 2
        },
        {
            "title": "\ud83d\udc3c Einf\u00fchrung in Pandas",
            "text": "Pandas ist eine leistungsstarke Bibliothek f\u00fcr die Datenverarbeitung. Es bietet flexible Tools zum Laden, Transformieren und Analysieren von Daten.",
            "link": "https://python-programming.quantecon.org/pandas.html",
            "highlight": "Pandas Dokumentation",
            "code": [
                "import pandas as pd",
                "# CSV-Datei laden",
                "df = pd.read_csv(\"data.csv\")",
                "# Erste Zeilen anzeigen",
                "print(df.head())",
                "# Datentypen anzeigen",
                "print(df.dtypes)",
                "# Daten filtern",
                "df_filtered = df[df['Wert'] > 100]"
            ],
            "image": "assets/pandas_intro.png",
            "prev": 1,
            "next": 3
        },
        {
            "title": "\ud83d\udcc8 Einf\u00fchrung in Plotly",
            "text": "Plotly ist eine Bibliothek f\u00fcr interaktive Datenvisualisierungen mit Unterst\u00fctzung f\u00fcr Diagramme, Karten und Dashboards.",
            "link": "https://plotly.com/python/",
            "highlight": "Plotly Python Docs",
            "code": [
                "import plotly.express as px",
                "# Einfache Liniendiagramm-Erstellung",
                "df = px.data.gapminder()",
                "fig = px.line(df, x='year', y='pop', color='continent', title='Bev\u00f6lkerungswachstum')",
                "fig.show()"
            ],
            "image": "assets/plotly_intro.png",
            "prev": 2,
            "next": 4
        },
        {
            "title": "\ud83c\udf0d Trump: Bubble Map",
            "text": "Wie verteilt sich die Medienberichterstattung zu Trump weltweit? Wir nutzen `scatter_geo` f\u00fcr eine Weltkarte.",
            "link": "https://plotly.com/python/bubble-maps/",
            "highlight": "Plotly Bubble Maps",
            "code": [
                "import plotly.express as px",
                "import pandas as pd",
                "df = pd.read_csv(\"trump_news.csv\")",
                "fig = px.scatter_geo(df, locations=\"country\", size=\"num_articles\", projection=\"natural earth\")",
                "fig.show()"
            ],
            "image": "assets/team_trump.png",
            "prev": 3,
            "next": 5
        },
        {
            "title": "\ud83d\udcca Musk: Bar Chart",
            "text": "Welche Themen dominieren die Musk-Schlagzeilen? Wir verwenden ein Balkendiagramm.",
            "link": "https://plotly.com/python/bar-charts/",
            "highlight": "Plotly Bar Charts",
            "code": [
                "import plotly.express as px",
                "import pandas as pd",
                "df = pd.read_csv(\"musk_news.csv\")",
                "fig = px.bar(df, x=\"Thema\", y=\"H\u00e4ufigkeit\", color=\"Thema\")",
                "fig.show()"
            ],
            "image": "assets/team_musk.png",
            "prev": 4,
            "next": 6
        },
        {
            "title": "\u26a1 Hackathon Phase",
            "text": "Jedes Team implementiert seine Visualisierung mit Plotly. Ziel: Daten einlesen, Diagramme erstellen, Teamwork!",
            "image": "assets/hackathon.png",
            "prev": 5,
            "next": 7
        },
        {
            "title": "\ud83d\udcdd Projekt Setup mit Git",
            "text": "Dieses Projekt ist als GitHub-Repository verf\u00fcgbar. Klone das Repository mit folgendem Befehl:",
            "link": "https://github.com/densenden/buddycall-plotpy",
            "highlight": "GitHub Repository",
            "code": [
                "# Repository klonen",
                "git clone https://github.com/densenden/buddycall-plotpy",
                "",
                "# In den Projektordner wechseln",
                "cd buddycall-plotpy",
                "",
                "# Neue Branches f\u00fcr Teams erstellen",
                "git checkout -b musk",
                "git checkout -b trump",
                "",
                "# Virtuelle Umgebung erstellen und aktivieren",
                "python -m venv venv",
                "source venv/bin/activate  # macOS/Linux",
                "",
                "# Abh\u00e4ngigkeiten installieren",
                "pip install -r requirements.txt",
                "",
                "# \u00c4nderungen committen und pushen",
                "git add .",
                "git commit -m 'Erste \u00c4nderungen'",
                "git push origin musk  # F\u00fcr Team Musk",
                "git push origin trump  # F\u00fcr Team Trump",
                "",
                "# Zwischen den Branches wechseln",
                "git checkout musk  # Zu Musk wechseln",
                "git checkout trump  # Zu Trump wechseln",
                "",
                "# \u00c4nderungen von main in Branches holen",
                "git checkout musk",
                "git merge main",
                "",
                "git checkout trump",
                "git merge main"
            ],
            "image": "assets/git_setup.png",
            "prev": 6,
            "next": 8
        },
        {
            "title": "\ud83d\udcc2 GitHub Struktur",
            "text": "Das Repository ist in verschiedene Ordner unterteilt, um eine saubere Code-Struktur zu gew\u00e4hrleisten.",
            "code": [
                "buddycall-plotpy/",
                "\u2502\u2500\u2500 data/         # Enth\u00e4lt CSV-Dateien",
                "\u2502   \u2502\u2500\u2500 __init__.py  # Modul f\u00fcr Datenzugriff",
                "\u2502   \u2502\u2500\u2500 musk_news.csv  # CSV mit Daten zu Musk",
                "\u2502   \u2502\u2500\u2500 trump_news.csv  # CSV mit Daten zu Trump",
                "\u2502",
                "\u2502\u2500\u2500 docs/         # Dokumentation & Anleitungen",
                "\u2502   \u2502\u2500\u2500 README.md  # Projektbeschreibung",
                "\u2502   \u2502\u2500\u2500 requirements.txt  # Abh\u00e4ngigkeiten f\u00fcr Python",
                "\u2502",
                "\u2502\u2500\u2500 assets/       # Bilder und Medien",
                "\u2502   \u2502\u2500\u2500 git_setup.png  # Git Installationsanleitung",
                "\u2502   \u2502\u2500\u2500 hackathon.png  # Bild f\u00fcr die Hackathon-Phase",
                "\u2502   \u2502\u2500\u2500 info_visualization.png  # Infografik-Prinzipien",
                "\u2502   \u2502\u2500\u2500 pandas_intro.png  # Einf\u00fchrung in Pandas",
                "\u2502   \u2502\u2500\u2500 plotly_intro.png  # Einf\u00fchrung in Plotly",
                "\u2502   \u2502\u2500\u2500 team_intro.png  # Begr\u00fc\u00dfungsbild",
                "\u2502   \u2502\u2500\u2500 team_musk.png  # Team Musk Illustration",
                "\u2502   \u2502\u2500\u2500 team_trump.png  # Team Trump Illustration",
                "\u2502",
                "\u2502\u2500\u2500 exercises/     # \u00dcbungen f\u00fcr die Teilnehmer",
                "\u2502   \u2502\u2500\u2500 musk_exercise.py  # \u00dcbung f\u00fcr Team Musk",
                "\u2502   \u2502\u2500\u2500 trump_exercise.py  # \u00dcbung f\u00fcr Team Trump",
                "\u2502",
                "\u2502\u2500\u2500 visuals/       # Visualisierungscode",
                "\u2502   \u2502\u2500\u2500 __init__.py  # Initialisierung des Moduls",
                "\u2502   \u2502\u2500\u2500 musk.py  # Musk Visualisierung",
                "\u2502   \u2502\u2500\u2500 trump.py  # Trump Visualisierung",
                "\u2502   \u2502\u2500\u2500 show_plotly.py  # Allgemeine Plotly-Funktion",
                "\u2502   \u2502\u2500\u2500 musk_solution.py  # Musterl\u00f6sung f\u00fcr Musk",
                "\u2502   \u2502\u2500\u2500 trump_solution.py  # Musterl\u00f6sung f\u00fcr Trump",
                "\u2502",
                "\u2502\u2500\u2500 src/          # Quellcode f\u00fcr das Dashboard",
                "\u2502   \u2502\u2500\u2500 main.py  # Hauptprogramm f\u00fcr das Dashboard",
                "\u2502   \u2502\u2500\u2500 main_solution.py  # Musterl\u00f6sung f\u00fcr das Dashboard",
                "\u2502",
                "\u2502\u2500\u2500 index.html    # Pr\u00e4sentation f\u00fcr die Session",
                "\u2502\u2500\u2500 script.js     # Interaktive Logik der Pr\u00e4sentation",
                "\u2502\u2500\u2500 styles.css    # Styling f\u00fcr die Pr\u00e4sentation",
                "\u2502\u2500\u2500 content.json  # Inhalte f\u00fcr die Pr\u00e4sentation"
            ],
            "image": "assets/github_structure.png",
            "prev": 7,
            "next": 9
        },
        {
            "title": "\ud83d\udcdd Feedback & Reflexion",
            "text": "Was hat gut funktioniert? Was k\u00f6nnen wir verbessern?",
            "image": "assets/feedback.png",
            "prev": 8
        }
    ]
}